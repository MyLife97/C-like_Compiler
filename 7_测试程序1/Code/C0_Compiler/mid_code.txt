int returnyear()
#RET = 2018 + 0
GOTO returnyear_end
returnyear_end:
ret returnyear
int add()
#RET = x + y
GOTO add_end
add_end:
ret add
void error()
$t1 = 1 + 0
If err_typ != $t1
    Then Goto Label1
printf string 0 \n
GOTO Label0
Label1:
$t2 = 2 + 0
If err_typ != $t2
    Then Goto Label2
printf string 1 \n
GOTO Label0
Label2:
$t3 = 3 + 0
If err_typ != $t3
    Then Goto Label4
printf string 2 \n
GOTO Label3
Label4:
printf string 3 \n
Label3:
Label0:
error_number = error_number + 1
GOTO error_end
error_end:
ret error
int cumulative_sum()
If x <= y
    Then Goto Label5
push 3
call error
GOTO Label6
Label5:
If y <= 100
    Then Goto Label7
push 1
call error
GOTO Label8
Label7:
If x >= -100
    Then Goto Label9
push 2
call error
GOTO Label10
Label9:
$t5 = x - y
If $t5 == 0
    Then Goto Label11
push x
$t6 = x + 1
push $t6
push y
call cumulative_sum
$t7 = #RET + 0
push $t7
call add
#RET = #RET + 0
GOTO cumulative_sum_end
GOTO Label12
Label11:
#RET = x + 0
GOTO cumulative_sum_end
Label12:
Label10:
Label8:
Label6:
cumulative_sum_end:
ret cumulative_sum
char returnc()
If void_index >= 5
    Then Goto Label13
void_index = void_index + 1
call returnc
#RET = #RET + 0
GOTO returnc_end
GOTO Label14
Label13:
#RET = 67 + 0
GOTO returnc_end
Label14:
returnc_end:
ret returnc
char output()
Label15:
printf string 4 \N
printf char input \n
#RET = input + 0
GOTO output_end
If 1 == 0
    Then Goto Label16
GOTO Label15
Label16:
output_end:
ret output
int register_disaster()
t1 = 1 + 0
t2 = 1 + 0
t3 = 1 + 0
t4 = 1 + 0
t5 = 1 + 0
t6 = 1 + 0
t7 = 1 + 0
t8 = 1 + 0
t9 = 1 + 0
t10 = 1 + 0
t11 = 1 + 0
t12 = 1 + 0
$t11 = t1 + t2
$t11 = $t11 + t3
$t11 = $t11 + t4
$t11 = $t11 + t5
$t11 = $t11 + t6
$t11 = $t11 + t7
$t11 = $t11 + t8
$t11 = $t11 + t9
$t11 = $t11 + t10
$t11 = $t11 + t11
#RET = $t11 + t12
GOTO register_disaster_end
register_disaster_end:
ret register_disaster
void warning()
warning_end:
ret warning
void test()
char_test = 65 + 0
letters[0] = 49
letters[1] = 50
letters[2] = 97
i = 10 + 0
$t12 = 65 + 0
If char_test != $t12
    Then Goto Label18
Label19:
$t13 = 131 + char_test
$t14 = letters[1]
$t13 = $t13 + $t14
$t15 = letters[0]
$t13 = $t13 - $t15
$t16 = letters[2]
$t13 = $t13 - $t16
$t17 = i * 1
$t13 = $t13 + $t17
int_test = $t13 + 0
i = i - 1
If i < 0
    Then Goto Label20
GOTO Label19
Label20:
GOTO Label17
Label18:
$t19 = 97 + 0
If char_test != $t19
    Then Goto Label21
$t20 = 221 + char_test
$t21 = letters[1]
$t20 = $t20 + $t21
$t22 = letters[0]
$t20 = $t20 - $t22
$t23 = letters[2]
$t20 = $t20 - $t23
$t24 = i * 1
int_test = $t20 + $t24
GOTO Label17
Label21:
int_test = -1 + 0
Label17:
printf string 5 \n
printf string 6 \N
printf int int_test \n
i = 10 + 0
Label22:
If i < 5
    Then Goto Label24
$t25 = 10 + 0
If i != $t25
    Then Goto Label27
char_test = 65 + 0
GOTO Label26
Label27:
$t26 = 57 + 0
If i != $t26
    Then Goto Label28
char_test = 66 + 0
GOTO Label26
Label28:
$t27 = 8 + 0
If i != $t27
    Then Goto Label29
char_test = 67 + 0
GOTO Label26
Label29:
$t28 = 55 + 0
If i != $t28
    Then Goto Label30
char_test = 68 + 0
GOTO Label26
Label30:
$t29 = 6 + 0
If i != $t29
    Then Goto Label31
char_test = 69 + 0
GOTO Label26
Label31:
char_test = 70 + 0
Label26:
GOTO Label25
Label24:
$t30 = 2 * i
$t30 = $t30 / 2
$t30 = $t30 + 48
$t30 = $t30 - 0
$t31 = 0 + 0
If $t30 != $t31
    Then Goto Label33
char_test = 65 + 0
GOTO Label32
Label33:
$t32 = 48 + 0
If $t30 != $t32
    Then Goto Label34
char_test = 48 + 0
GOTO Label32
Label34:
char_test = 71 + 0
Label32:
Label25:
i = i - 1
If i < 0
    Then Goto Label23
GOTO Label22
Label23:
push char_test
call output
push 4
call error
test_end:
ret test
void main()
t1 = 1 + 0
t2 = 2 + 0
label = 48 + 0
label1 = 49 + 0
label2 = 50 + 0
printf string 7 \n
scanf int x 
scanf int y 
printf string 8 \n
scanf char input 
i = 0 + 0
Label35:
$t34 = i * 1
$t34 = $t34 - 1
$t34 = $t34 + 1
push x
push y
call cumulative_sum
$t35 = #RET + 0
result[$t34] = $t35
If 0 == 0
    Then Goto Label36
GOTO Label35
Label36:
i = 1 + 0
Label37:
result[i] = i
i = i + 1
$t37 = y - x
If i >= $t37
    Then Goto Label38
GOTO Label37
Label38:
i = 1 + 0
If x < -100
    Then Goto Label39
If y > 100
    Then Goto Label41
If x > y
    Then Goto Label43
printf string 9 \N
$t38 = result[0]
printf int $t38 \n
GOTO Label44
Label43:
Label44:
GOTO Label42
Label41:
Label42:
GOTO Label40
Label39:
Label40:
printf string 10 \N
call returnyear
$t39 = #RET + 0
printf int $t39 \n
push input
call output
c = #RET + 0
If c != 99
    Then Goto Label45
printf string 11 \N
printf int t1 \n
GOTO Label46
Label45:
printf string 12 \N
printf int t2 \n
Label46:
call returnc
c = #RET + 0
$t42 = c + 0
If $t42 != 67
    Then Goto Label47
printf string 13 \n
GOTO Label48
Label47:
printf string 14 \n
Label48:
call warning
call test
printf string 15 \N
printf int i \n
printf string 16 \N
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push 0
push 0
call register_disaster
$t43 = #RET + 0
printf int $t43 \n
exit 
