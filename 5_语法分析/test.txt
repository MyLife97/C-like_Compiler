CONST int max_value_limit = 100; 
const int min_value_limit = -100; 
const int max_bounds_limit = 10,
min_bounds_limit 
=
0;
const int const_void_index = 5;

int error_number;
int void_index;
int i;
char cC,eE
,
dD
;


INT returnYear{
    return (--2017--1);
}

int add(int x, int y){ 
    return (+ x + y); 
}

void error(int err_typ){ 
    switch(err_typ){ 
        case 1:{
            printf("Max value limit.");
        }
        case 2:{
            printf("Min value limit.");
        }
        default:{
            switch(err_typ){
                case 3:
                    printf("Invalid Input.");
                default:
                    printf("Error Type Not Define.");
            }
        }
    }

    error_number = error_number + 1;
    return;
}

int cumulative_sum(int x, int y){ 
    const int err_max_value_limit = 1;
    const int err_min_value_limit = 2;
    const int err_invalid_input = 3;

    if(x > y) 
        error(err_invalid_input);
    else
        if(y > max_value_limit)
            error(err_max_value_limit);
        else
            if(x < min_value_limit)
                error(err_min_value_limit);
            else
                if(x - y)
                    return (add(x, cumulative_sum(x + 1, y)));
                else
                    return (x);
}



void warning{
    printf("");
    printf("The Program below is NonSense."); 
    return;
}

char returnC{
    if(void_index < const_void_index){
        void_index = void_index + 1;
        return returnC;
    }
    else
        return ('C');
}

char output(char input){
	printf("Letter is ", input);
	return (input);
}

void test{
    int int_test;
    char char_test;
    int _abcdefghijklmnopqrstuvwxyz0123456789; 
    char letters[002]; 


    char_test = 'A';
    letters[0] = '1'; 
    letters[1] = '2';
    letters[2] = 'a';

    int_test = 133 - 1 * 2 * 3 / (4 - 1) + char_test + letters[1] - letters[0] - letters[2]; 

    ;
    {{}{}{;}}
    {}
    {;{;};}

    error(4);
    printf("Complex Expression = ", int_test); 
    output(letters[0]); 
    
}

void main() 
{
    int x,y;
    char input;
    char C;
    int result[200]; 

    printf("Please Input Lower Bound and Upper Bound:");
    scanf(x,y);

    printf("Please Input A Char:");
    scanf(input);

    i = 0;

    do
        result[i] = cumulative_sum(x,y); 
    while(0)

    i = 1;
    do{
        result[i] = i; 
        i = i + 1;
    }while(i < y - x)

    if(x >= -100){
        if(y <= 100){
            if(x <= y){
                printf("X = ", X); 
                printf("Y = ", Y);
                printf("X sum to Y = ", result[0]);
            }
        }
    }

    printf("It's already ", returnYear);

    C = output(input);
    if(C == 'c')
        printf("It is Lower c.");
    else
        printf("It is not Lower c");

    C = returnC;
    if(C == 'C')
        printf("\tIt is Upper C.\n");
    else
        printf("It is not Upper C");
    
    warning; 
    test;
}